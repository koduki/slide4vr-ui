steps:
- name: 'gcr.io/cloud-builders/npm'
  entrypoint: yarn
  args: ['install']
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args: ['-c', "
    echo API_BASE_URL=https://slide4vr-api-dnb6froqha-uc.a.run.app > .env && 
    gcloud secrets versions access latest --secret=VUE_APP_AUTH_API_DOMAIN|(read x; echo FIREBAE_AUTH_DOMAIN=$x  ) >> .env &&
    gcloud secrets versions access latest --secret=VUE_APP_AUTH_API_KEY|(read x;    echo FIREBAE_AUTH_API_KEY=$x     ) >> .env
    " ]
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: gsutil
  args: ['cp', 'gs://stg-slide4vr.nklab.dev/ssg-pages.json', 'ssg/ssg-pages.json']  
- name: 'gcr.io/cloud-builders/npm'
  entrypoint: yarn
  args: ['generate']
- name: 'gcr.io/slide2vr/slide4vr_ui-builder'




#   entrypoint: 'bash'
#   args: ['-c', "find dist/slide -type f" ]
# - name: 'gcr.io/cloud-builders/gcloud'
#   entrypoint: 'bash'
#   args: ['-c', "find dist/ -type f|sed 's/dist//g'|grep -v .png|grep -v .svg |grep -v .jpg|grep -v .ico|grep -v .nojekyll| xargs -n1 -I {} echo gs://stg-slide4vr.nklab.dev{} > dist.list" ]
# - name: 'gcr.io/cloud-builders/gcloud'
#   entrypoint: 'bash'
#   args: ['-c', "cat dist.list" ]
# - name: 'gcr.io/cloud-builders/gcloud'
#   entrypoint: 'bash'
#   args: ['-c', "gsutil -m setmeta -h 'Cache-Control: no-cache' $(cat dist.list)" ]


  # args: ['-c', "gsutil -m setmeta -h 'Cache-Control: no-cache' $(cat dist.list)" ]
# - name: 'gcr.io/cloud-builders/docker'
#   args: ['build', '-t', 'gcr.io/$PROJECT_ID/slide4vr-ssg', '-f', 'ssg/Dockerfile', '.']
# - name: 'gcr.io/cloud-builders/docker'
#   args: ['push', 'gcr.io/$PROJECT_ID/slide4vr-ssg']
# - name: 'gcr.io/cloud-builders/gcloud'
#   args: ['run', 'deploy', 'slide4vr-ssg', '--image', 'gcr.io/$PROJECT_ID/slide4vr-ssg', '--region', 'us-central1', '--platform', 'managed', '--allow-unauthenticated']
# images:
# - gcr.io/$PROJECT_ID/slide4vr-ssg